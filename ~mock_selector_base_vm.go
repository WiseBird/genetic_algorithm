// Automatically generated by MockGen. DO NOT EDIT!
// Source: selector_base.go

package genetic_algorithm

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of SelectorBaseVirtualMInterface interface
type MockSelectorBaseVirtualMInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockSelectorBaseVirtualMInterfaceRecorder
}

// Recorder for MockSelectorBaseVirtualMInterface (not exported)
type _MockSelectorBaseVirtualMInterfaceRecorder struct {
	mock *MockSelectorBaseVirtualMInterface
}

func NewMockSelectorBaseVirtualMInterface(ctrl *gomock.Controller) *MockSelectorBaseVirtualMInterface {
	mock := &MockSelectorBaseVirtualMInterface{ctrl: ctrl}
	mock.recorder = &_MockSelectorBaseVirtualMInterfaceRecorder{mock}
	return mock
}

func (_m *MockSelectorBaseVirtualMInterface) EXPECT() *_MockSelectorBaseVirtualMInterfaceRecorder {
	return _m.recorder
}

func (_m *MockSelectorBaseVirtualMInterface) Prepare(_param0 Chromosomes) {
	_m.ctrl.Call(_m, "Prepare", _param0)
}

func (_mr *_MockSelectorBaseVirtualMInterfaceRecorder) Prepare(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Prepare", arg0)
}

func (_m *MockSelectorBaseVirtualMInterface) Select() ChromosomeInterface {
	ret := _m.ctrl.Call(_m, "Select")
	ret0, _ := ret[0].(ChromosomeInterface)
	return ret0
}

func (_mr *_MockSelectorBaseVirtualMInterfaceRecorder) Select() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Select")
}
